%YAML:1.0

#common parameters
imu_topic: "/imu0"
image_topic: "/tello/image_raw"
output_path: "/home/alison/output/"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 960
image_height: 720
distortion_parameters:
   k1: -0.027034
   k2: 0.079271
   p1: -0.000121
   p2: 0.000887
projection_parameters:
   fx: 932.3653
   fy: 930.16351
   cx: 469.88661
   cy: 361.10729

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [  -0.0644365, -0.194307, 0.978822,
            0.995937, 0.0493175, 0.0753532,
            -0.0629147, 0.9797, 0.19034]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.00247413, -0.00450382, -0.00192739]

#    [ WARN] [1668272894.647873425]: initial extrinsic rotation: 
# 0.0749602  -0.30212  0.950318
#  0.947944 -0.274185 -0.161941
#  0.309489  0.912987   0.26584

# [ WARN] [1668273795.465722439]: initial extrinsic rotation: 
# -0.0644365  -0.194307   0.978822
#   0.995937  0.0493175  0.0753532
# -0.0629147     0.9797    0.19034

# [ WARN] [1668273795.538927671]: gyroscope bias initial calibration  0.00247413 -0.00450382 -0.00192739



#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 10            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.0542          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.02         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 9.3049e-4         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 10.0000     # gravity magnitude
# acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2
# gyr_n: 0.02         # gyroscope measurement noise standard deviation.     #0.05
# acc_w: 0.0001         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 10.0000     # gravity magnitude
# acc_n: 1.8036245945594328e-02
# acc_w: 3.0118262634802398e-03
# acc_n: 1.7528667728763256e-02
# acc_w: 2.8224152080460929e-03
# acc y  freq 9.82829
# acc y  period 0.101747
# acc z  numData 1771



#loop closure parameters
loop_closure: 1                 # start loop closure
load_previous_pose_graph: 0     # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0          # useful in real-time and large project
pose_graph_save_path: "/home/alison/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ